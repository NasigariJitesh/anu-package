{
  "hello": "Hello World. This is me testing",

  "home:about1": "Aṇu (pronounced /ɐɳʊ/) translates to an atom in Sanskrit.",
  "home:about2": "Aṇu is a collection of UI components that enable you to build extraordinary applications.",
  "home:mainHeading": "Component library for React Native and React Native Web",
  "home:subHeading": "Based on the Material design, support for more design systems coming soon.",
  "home:list1-heading": "Supported Languages",
  "home:list1-item1": "JavaScript",
  "home:list1-item2": "TypeScript",
  "home:list2-heading": "Supported Design Systems",
  "home:list2-item1": "Material design",
  "home:button:getting-started": "Getting started",

  "footer:image-caption": "Component library for React Native and React Native Web",

  "footer:list1-heading": "Links",
  "footer:list1-item1-title": "Getting Started",
  "footer:list1-item2-title": "Theming",
  "footer:list1-item3-title": "Components",
  "footer:list1-item4-title": "Releases",
  "footer:list2-heading": "Community",
  "footer:list2-item1-title": "Discord",
  "footer:list2-item2-title": "Github",
  "footer:list2-item3-title": "Bug Report",
  "footer:bottomLine": "Made with ❤️ in ",
  "content:props": "Props",
  "content:prop-optional": "optional",
  "content:prop-groupProperty": "Group Property",
  "content:defaultValue": "Default Value",
  "rightSideBar:onThisPage": "On this page",
  "leftSideBar:components": "Components",
  "leftSideBar:getting-started": "Getting Started",
  "leftSideBar:auto-complete": "Auto Complete",
  "leftSideBar:avatar": "Avatar",
  "leftSideBar:theming": "Theming",
  "leftSideBar:badge": "Badge",
  "leftSideBar:bottom-sheet": "Bottom Sheet",
  "leftSideBar:button": "Button",
  "leftSideBar:button-common": "Common",
  "leftSideBar:button-fab": "FAB",
  "leftSideBar:button-extended-fab": "Extended FAB",
  "leftSideBar:button-icon": "Icon buttons",
  "leftSideBar:button-segmented": "Segmented buttons",
  "leftSideBar:card": "Card",
  "leftSideBar:card-header": "Card Header",
  "leftSideBar:card-media": "Card Media",
  "leftSideBar:card-title": "Card Title",
  "leftSideBar:card-content": "Card Content",
  "leftSideBar:card-actions": "Card Actions",
  "leftSideBar:checkbox": "Checkbox",
  "leftSideBar:chips": "Chips",
  "leftSideBar:container": "Container",
  "leftSideBar:date-picker": "Date picker",
  "leftSideBar:date-picker-input": "Date picker input",
  "leftSideBar:date-picker-modal": "Date picker modal",

  "leftSideBar:file-upload": "File upload",
  "leftSideBar:file-drop-zone": "File dropzone",
  "leftSideBar:dialog": "Dialog",
  "leftSideBar:dialog-title": "Dialog Title",
  "leftSideBar:dialog-content": "Dialog Content",
  "leftSideBar:dialog-actions": "Dialog Actions",

  "leftSideBar:divider": "Divider",

  "leftSideBar:image": "Image",
  "leftSideBar:input-fields": "Input Fields",
  "leftSideBar:text-fields": "Text Fields",
  "leftSideBar:menu": "Menu",
  "leftSideBar:menu-list": "Menu list",
  "leftSideBar:menu-item": "Menu item",
  "leftSideBar:otp-input": "OTP Input",
  "leftSideBar:password-input": "Password Input",
  "leftSideBar:phone-input": "Phone Input",
  "leftSideBar:radio": "Radio Button",
  "leftSideBar:search": "Search",
  "leftSideBar:side-sheet": "Side Sheet",
  "leftSideBar:switch": "Switch",
  "leftSideBar:tabs": "Tabs",
  "leftSideBar:time-picker": "Time Picker",
  "leftSideBar:touchable-ripple": "Touchable Ripple",
  "leftSideBar:typography": "Typography",

  "leftSideBar:credits": "Credits",

  "autoCompleteDocumentation:mainHeading": "Auto Complete",
  "autoCompleteDocumentation:example1-name": "Outlined Auto Complete",

  "autoCompleteDocumentation:example2-name": "Filled Auto Complete",

  "autoCompleteDocumentation:example3-name": "Base Auto Complete",

  "autoCompleteDocumentation:example4-name": "Auto Complete - with debouncing",

  "autoCompleteDocumentation:example5-name": "Auto Complete - no results",

  "autoCompleteDocumentation:property-value-description": "The Value of the text in auto complete.",
  "autoCompleteDocumentation:property-data-description": "The array of items to be searched from.",
  "autoCompleteDocumentation:property-onChangeText-description": "Callback Function when the value is changed.",
  "autoCompleteDocumentation:property-flatListProps-description": "The properties for the flat list component used to display results.",
  "autoCompleteDocumentation:property-filterOnChange-description": "Function to filter the options on change of text value.",
  "autoCompleteDocumentation:property-caseSensitive-description": "Whether the comparison is case sensitive.",
  "autoCompleteDocumentation:property-debounce-description": "If true, uses debouncing technique when filtering.",
  "autoCompleteDocumentation:property-debounceDuration-description": "Time Duration for the debouncing.",
  "autoCompleteDocumentation:property-resultContainerStyle-description": "The styles for the results container.",
  "autoCompleteDocumentation:property-autoCompleteContainerStyle-description": "The styles for the results container.",
  "autoCompleteDocumentation:external-properties-title": "Text Field Properties",

  "avatarDocumentation:mainHeading": "Avatar",
  "avatarDocumentation:mainDescription": "An avatar is typically displayed as a small image or icon that is associated with a user’s profile or identity.",
  "avatarDocumentation:example1-name": "Default",
  "avatarDocumentation:example1-description": "Default avatars can be used as a placeholder and are populated, when the image cannot be loaded.",

  "avatarDocumentation:example2-name": "Letter avatars",
  "avatarDocumentation:example2-description": "Letter avatars are a type of avatar that uses a user’s initials or the first letter of their name as the avatar image. These are often used as a fallback option when a user does not have a profile picture or photo, or when an image avatar cannot be generated automatically.",
  "avatarDocumentation:example3-name": "Image avatars",
  "avatarDocumentation:example3-description": "Image avatars are used to show a user’s profile picture or photo as the avatar image.",
  "avatarDocumentation:example4-name": "Grouped avatars",
  "avatarDocumentation:example4-description": "These are avatars that represent a group of users or members. They can be used to show the members of a team, a chat group, or a community.",
  "avatarDocumentation:example5-name": "Avatar - with children",
  "avatarDocumentation:example6-name": "Avatar - Implementation for Web",
  "avatarDocumentation:example7-name": "Avatar - Implementation for Mobile (Android, iOS)",

  "avatarDocumentation:property-size-description": "The size of the avatar.",
  "avatarDocumentation:property-variant-description": "The variant of avatar, whether circular or rounded.",
  "avatarDocumentation:property-name-description": "The name of the user for letter avatar.",
  "avatarDocumentation:property-lastName-description": "The last name of the user for letter avatar.",
  "avatarDocumentation:property-source-description": "The image source for image avatar.",
  "avatarDocumentation:property-children-description": "The children component for avatar.",
  "avatarDocumentation:property-spacing-description": "The children component for avatar.",
  "avatarDocumentation:property-max-description": "The maximum number of avatars to be displayed in avatar group.",
  "avatarDocumentation:property-total-description": "The total number of avatars in avatar group.",
  "avatarDocumentation:property-excessAvatarStyle-description": "The styles for the avatar that displays number of remaining avatar in avatar group.",
  "avatarDocumentation:property-excessAvatarSx-description": "The system prop that allows defining system overrides as well as additional CSS styles for the avatar that displays number of remaining avatar in avatar group.",

  "badgeDocumentation:mainHeading": "Badge",
  "badgeDocumentation:mainDescription": "Badges are used to display a small amount of information, typically a number or a short status message, on top of an icon or avatar.",
  "badgeDocumentation:example1-name": "Notification Badge",
  "badgeDocumentation:example1-description": "Notification badges are used to provide a visual indicator of new or updated information.",
  "badgeDocumentation:example2-name": "Status Badge",
  "badgeDocumentation:example2-description": "Status badges are used to provide a visual indicator of status of a component or information.",
  "badgeDocumentation:example3-name": "Badge - with Position",
  "badgeDocumentation:property-value-description": "The content of the badge.",
  "badgeDocumentation:property-showZero-description": "whether the badge should be displayed when value is zero.",
  "badgeDocumentation:property-maxValue-description": "Beyond this, the content will be shown as + appended to max value.",
  "badgeDocumentation:property-overlap-description": "The shape of the overlaying container of the badge.",
  "badgeDocumentation:property-position-description": "The position of the badge.",
  "badgeDocumentation:property-contentStyle-description": "The styles for the badge content.",
  "badgeDocumentation:property-style-description": "The styles for the badge.",
  "badgeDocumentation:property-sx-description": "The extended styles for the badge.",

  "bottomSheetDocumentation:mainHeading": "Bottom Sheet",
  "bottomSheetDocumentation:mainDescription": "The bottom sheet is a type opf modal dialog or component that slides up from the bottom of the screen to display additional content or actions",
  "bottomSheetDocumentation:example1-name": "Standard bottom sheet",
  "bottomSheetDocumentation:example1-description": "A Standard bottom sheet typically includes a header section with a title, some description along with controls, actions, and information.\n\nAlso, it can be customized with various styles and options, including list items with icons, separators, and others.",
  "bottomSheetDocumentation:property-height-description": "The height of the bottom sheet.",
  "bottomSheetDocumentation:property-startCoordinate-description": "TInitial coordinate for the sheet to stay at",
  "bottomSheetDocumentation:property-damping-description": "Damping for animations.",
  "bottomSheetDocumentation:property-children-description": "The components that are to be displayed inside bottom sheet.",
  "bottomSheetDocumentation:property-hideDragHandle-description": "If true, the the bottom sheet drag handle will be hidden.",
  "bottomSheetDocumentation:property-handleStyles-description": "Styles for the handle.",
  "bottomSheetDocumentation:property-containerStyles-description": "Styles for the bottom sheet.",
  "bottomSheetDocumentation:example2-name": "Modal bottom sheet",
  "bottomSheetDocumentation:example2-description": "A Modal bottom sheet typically covers the entire screen and requires the user to either dismiss or take an action before returning to the underlying content.",
  "bottomSheetDocumentation:example3-name": "Modal bottom sheets - with menu",
  "bottomSheetDocumentation:example3-description": "Bottom sheets with Menu contain a menu or list of options. When triggered, the bottom sheet with the menu slides up from the bottom of the screen and displays a list of options that the user can interact with.\nThe menu can be customized with various styles and options, including list items with icons, separators, and sub-headers.",

  "regularButtonDocumentation:mainHeading": "Button",
  "regularButtonDocumentation:mainDescription": "Buttons help users navigate, interact, and engage with websites and apps.",
  "regularButtonDocumentation:heading": "Common Buttons",
  "regularButtonDocumentation:subTitle": "Buttons help people initiate actions, from sending an email, to sharing a document, to liking a post.There are five types of regular buttons: elevated, filled, filled tonal, outlined, and text.",
  "regularButtonDocumentation:example1-name": "Elevated buttons",
  "regularButtonDocumentation:example2-name": "Filled buttons",
  "regularButtonDocumentation:example3-name": "Filled tonal buttons",
  "regularButtonDocumentation:example4-name": "Outlined buttons",
  "regularButtonDocumentation:example5-name": "Text buttons",
  "regularButtonDocumentation:property-title-description": "The label/title for the regular button.",
  "regularButtonDocumentation:property-type-description": "The type of the regular button.",
  "regularButtonDocumentation:property-icon-description": "The icon component or the icon props for material icons.",
  "regularButtonDocumentation:property-style-description": "The styles for the regular button component.",
  "regularButtonDocumentation:property-labelStyle-description": "The styles for the label of the button.",
  "regularButtonDocumentation:property-pressableProps-description": "The properties of the pressable component of react native (except sx).",

  "FABDocumentation:mainHeading": "Button",
  "FABDocumentation:mainDescription": "Buttons help users navigate, interact, and engage with websites and apps.",
  "FABDocumentation:heading": "Floating Action Buttons",
  "FABDocumentation:subTitle": "The FAB represents the most important action on a screen. It puts key actions within reach. There are three sizes of floating action buttons: FAB, small FAB, and large FAB.",
  "FABDocumentation:property-size-description": "The size of the floating action button",
  "FABDocumentation:property-icon-description": "The icon component or the icon props for material icons.",
  "FABDocumentation:property-FABColor-description": "The theme color of the FAB.",
  "FABDocumentation:property-lowered-description": "Whether the FAB is lowered than usual FAB elevation.",
  "FABDocumentation:property-style-description": "The styles for the button component.",
  "FABDocumentation:property-pressableProps-description": "The properties of the pressable component of react native (except sx)",
  "FABDocumentation:example1-name": "Default",
  "FABDocumentation:example2-name": "Small FAB",
  "FABDocumentation:example3-name": "Large FAB",
  "FABDocumentation:example4-name": "FAB - Lowered",

  "extendedFABDocumentation:mainHeading": "Button",
  "extendedFABDocumentation:mainDescription": "Buttons help users navigate, interact, and engage with websites and apps.",
  "extendedFABDocumentation:heading": "Extended Floating Action Buttons",
  "extendedFABDocumentation:subTitle": "Extended FABs help people take primary actions. They are wider than FABs to accommodate a text label and larger target area.",
  "extendedFABDocumentation:property-title-description": "The label/title for the regular button",
  "extendedFABDocumentation:property-icon-description": "The icon component or the icon props for material icons.",
  "extendedFABDocumentation:property-FABColor-description": "The theme color of the FAB.",
  "extendedFABDocumentation:property-lowered-description": "Whether the FAB is lowered than usual FAB elevation.",
  "extendedFABDocumentation:property-style-description": "The styles for the button component.",
  "extendedFABDocumentation:property-titleStyle-description": "The styles for the label of the button.",
  "extendedFABDocumentation:property-pressableProps-description": "The properties of the pressable component of react native (except sx)",
  "extendedFABDocumentation:example1-name": "Default",
  "extendedFABDocumentation:example2-name": "Extended FAB - Lowered",

  "iconButtonDocumentation:mainHeading": "Button",
  "iconButtonDocumentation:mainDescription": "Buttons help users navigate, interact, and engage with websites and apps.",
  "iconButtonDocumentation:heading": "Icon Buttons",
  "iconButtonDocumentation:subTitle": "Icon buttons help people take supplementary actions with a single tap. There are four types of icon buttons: filled, filled tonal, outlined, and standard.\n\nWe support Material Icons from react native vector icons package, you can refer the icon names from their site",
  "iconButtonDocumentation:property-type-description": "The type of the icon button",
  "iconButtonDocumentation:property-icon-description": "The icon component or the icon props for material icons.",
  "iconButtonDocumentation:property-toggle-description": "Whether the icon button is toggle-able.",
  "iconButtonDocumentation:property-selected-description": "Whether the toggle-able icon button is selected or not.",
  "iconButtonDocumentation:property-style-description": "The styles for the icon button component.",
  "iconButtonDocumentation:property-pressableProps-description": "The properties of the pressable component of react native (except sx)",
  "iconButtonDocumentation:example1-name": "Filled icon button",
  "iconButtonDocumentation:example2-name": "Filled icon button - Toggle",
  "iconButtonDocumentation:example3-name": "Filled tonal icon button",
  "iconButtonDocumentation:example4-name": "Filled tonal icon button - Toggle",
  "iconButtonDocumentation:example5-name": "Outlined icon button",
  "iconButtonDocumentation:example6-name": "Outlined icon button - Toggle",
  "iconButtonDocumentation:example7-name": "Standard icon button",
  "iconButtonDocumentation:example8-name": "Standard icon button - Toggle",

  "segmentedButtonDocumentation:mainHeading": "Button",
  "segmentedButtonDocumentation:mainDescription": "Buttons help users navigate, interact, and engage with websites and apps.",
  "segmentedButtonDocumentation:heading": "Segmented Buttons",
  "segmentedButtonDocumentation:subTitle": "Segmented buttons help people select options, switch views, or sort elements. There are two types of segmented buttons: single-select and multi-select.",
  "segmentedButtonDocumentation:property-id-description": "Id of the segmented button.",
  "segmentedButtonDocumentation:property-title-description": "The label/title for the regular button",
  "segmentedButtonDocumentation:property-selected-description": "The ids of selected members of the segmented button group",
  "segmentedButtonDocumentation:property-icon-description": "The icon component or the icon props for material icons.",
  "segmentedButtonDocumentation:property-onSelect-description": "The callback when there is a press or click on the segmented button.",
  "segmentedButtonDocumentation:property-multiSelect-description": "whether the multiple segmented buttons can be selected at once",
  "segmentedButtonDocumentation:property-onPress-description": "The callback when there is a press or click on the segmented buttons.",
  "segmentedButtonDocumentation:property-containerStyle-description": "The style for the segmented button group container.",
  "segmentedButtonDocumentation:property-style-description": "The styles for the segmented button component.",
  "segmentedButtonDocumentation:property-titleStyle-description": "The styles for the label of the button.",
  "segmentedButtonDocumentation:example1-name": "Default",
  "segmentedButtonDocumentation:example2-name": "Multi Select Segmented Button",

  "cardDocumentation:mainHeading": "Card",
  "cardDocumentation:mainDescription": "A card serves as a basic container for information or content. It is used to group related information together and present it in a visually appealing and easy-to-read manner.",
  "cardDocumentation:property-orientation-description": "Whether the Card is horizontal or vertical card. ",
  "cardDocumentation:property-variant-description": "The style variant of the card.",
  "cardDocumentation:property-width-description": "The Width of the card, is optional when orientation is horizontal.",
  "cardDocumentation:property-height-description": "The Height of the card, is optional when orientation is vertical.",
  "cardDocumentation:external-properties-title": "Container Properties",

  "cardDocumentation:example1-name": "Elevated card",
  "cardDocumentation:example1-description": "An elevated card is a variant of the standard card component that has an elevated appearance. It has a subtle shadow effect that creates the illusion of the card being lifted off the surface.",
  "cardDocumentation:example2-name": "Filled card",
  "cardDocumentation:example2-description": "A filled card is a variant of the standard card component that has a solid fill color instead of a white or transparent background.",
  "cardDocumentation:example3-name": "Outlined card",
  "cardDocumentation:example3-description": "An outlined card is a variant of the standard card component that has an outline border instead of a solid background.",
  "cardDocumentation:example4-name": "Stacked card",
  "cardDocumentation:example5-name": "Horizontal card",
  "cardDocumentation:example5-description": "A horizontal card is used to display content in a horizontal layout, as opposed to the traditional vertical layout of a standard card. It typically contains an image on one side and text on the other side.\n\nIt is often used to display content such as articles, products, or profiles, where the image provides a visual context for the accompanying text.",

  "cardDocumentation:additionalInformation-title": "See also",
  "cardDocumentation:additionalInformation-info1": "<a  class=\"documentation-link\" target=\"blank\" href=\"/components/card/header\" title=\"Card Header\">Card Header</a>.",
  "cardDocumentation:additionalInformation-info2": "<a  class=\"documentation-link\" target=\"blank\" href=\"/components/card/media\" title=\"Card Media\">Card Media</a>.",
  "cardDocumentation:additionalInformation-info3": "<a  class=\"documentation-link\" target=\"blank\" href=\"/components/card/title\" title=\"Card Title\">Card Title</a>.",
  "cardDocumentation:additionalInformation-info4": "<a  class=\"documentation-link\" target=\"blank\" href=\"/components/card/content\" title=\"Card Content\">Card Content</a>.",
  "cardDocumentation:additionalInformation-info5": "<a  class=\"documentation-link\" target=\"blank\" href=\"/components/card/actions\" title=\"Card Actions\">Card Actions</a>.",

  "cardHeaderDocumentation:mainHeading": "Card Header",
  "cardHeaderDocumentation:property-heading-description": "The heading text.",
  "cardHeaderDocumentation:property-subHeading-description": "The sub heading text.",
  "cardHeaderDocumentation:property-avatar-description": "The avatar component that is displayed to left of the heading.",
  "cardHeaderDocumentation:property-action-description": "The action component that is displayed to right of the heading.",
  "cardHeaderDocumentation:property-headingStyle-description": "The style for the heading text.",
  "cardHeaderDocumentation:property-subHeadingStyle-description": "The style for the sub heading text.",
  "cardHeaderDocumentation:example1-name": "Default",
  "cardHeaderDocumentation:example2-name": "Card Header - with Avatar and Action",

  "cardMediaDocumentation:mainHeading": "Card Media",
  "cardMediaDocumentation:property-source-description": "The media source (either a remote URL or a local file resource). ",
  "cardMediaDocumentation:property-cardOrientation-description": "Whether the Card is horizontal or vertical card. ",
  "cardMediaDocumentation:property-width-description": "The Width of the media, is optional when card orientation is horizontal.",
  "cardMediaDocumentation:property-height-description": "The Height of the media, is optional when card orientation is vertical.",
  "cardMediaDocumentation:external-properties-title": "Image Properties",
  "cardMediaDocumentation:example1-name": "Default",
  "cardMediaDocumentation:example2-name": "Card Media - with horizontal card",

  "cardTitleDocumentation:mainHeading": "Card Title",
  "cardTitleDocumentation:property-title-description": "The text for title. ",
  "cardTitleDocumentation:property-type-description": "Whether to use default title format or custom title components. ",
  "cardTitleDocumentation:property-subTitle-description": "The text for sub title.",
  "cardTitleDocumentation:property-children-description": "The child elements for the custom title type.",
  "cardTitleDocumentation:example1-name": "Default",
  "cardTitleDocumentation:example2-name": "Custom",

  "cardContentDocumentation:mainHeading": "Card Content",
  "cardContentDocumentation:property-children-description": "The child components that is displayed to as content of the card.",
  "cardContentDocumentation:property-style-description": "The style for content area of the card.",
  "cardContentDocumentation:property-sx-description": "The system prop that allows defining system overrides as well as additional CSS styles.",
  "cardContentDocumentation:example1-name": "Default",

  "cardActionsDocumentation:mainHeading": "Card Actions",
  "cardActionsDocumentation:property-children-description": "The child components that is displayed to as actions of the card.",
  "cardActionsDocumentation:property-align-description": "The alignment of all action items on the cross axis",
  "cardActionsDocumentation:property-justify-description": "The alignment of all action items on the main axis.",
  "cardActionsDocumentation:property-style-description": "The style for action area of the card.",
  "cardActionsDocumentation:property-sx-description": "The system prop that allows defining system overrides as well as additional CSS styles.",
  "cardActionsDocumentation:example1-name": "Default",

  "checkBoxDocumentation:mainHeading": "Checkbox",
  "checkBoxDocumentation:mainDescription": "Checkboxes allow users to select one or more items from a set. They can turn an option on or off.",
  "checkBoxDocumentation:property-id-description": "Id of the checkbox item.",
  "checkBoxDocumentation:property-selected-description": "Whether the checkbox is selected",
  "checkBoxDocumentation:property-indeterminate-description": "If true, the component appears indeterminate.",
  "checkBoxDocumentation:property-label-description": "The label to display with the checkbox.",
  "checkBoxDocumentation:property-labelPlacement-description": "Position where the label should be placed.",
  "checkBoxDocumentation:property-disabled-description": "If true, the component is disabled.",
  "checkBoxDocumentation:property-error-description": "Whether an error occurred regarding to the checkbox.",
  "checkBoxDocumentation:property-iconSize-description": "The size of the checked icon.",
  "checkBoxDocumentation:property-color-description": "The color of the checkbox component.",
  "checkBoxDocumentation:property-style-description": "The styles for the checkbox component.",
  "checkBoxDocumentation:property-iconStyle-description": "The styles for the checked Icon.",
  "checkBoxDocumentation:property-labelStyle-description": "The styles for the label of the checkbox.",
  "checkBoxDocumentation:property-containerStyle-description": "The styles for the container of the checkbox.",
  "checkBoxDocumentation:property-onPress-description": "The callback when there is a press or click on the checkbox.",
  "checkBoxDocumentation:example1-name": "Default",
  "checkBoxDocumentation:example2-name": "Checkbox - Indeterminate",
  "checkBoxDocumentation:example3-name": "Checkbox - with Label",

  "chipDocumentation:mainHeading": "Chips",
  "chipDocumentation:mainDescription": "Chips help people enter information, make selections, filter content, or trigger actions. There are four types of chips: assist, filter, input, and suggestion.",
  "chipDocumentation:property-type-description": "The type of the chip.",
  "chipDocumentation:property-value-description": "The content of the chip.",
  "chipDocumentation:property-selected-description": "Whether the chip is selected",
  "chipDocumentation:property-elevated-description": "Whether the chip has an elevated style",
  "chipDocumentation:property-leadingIcon-description": "Icon to be displayed before (to left of) the chip content",
  "chipDocumentation:property-trailingIcon-description": "Icon to be displayed after (to right of) the chip content",
  "chipDocumentation:property-style-description": "The styles for the chip component.",
  "chipDocumentation:property-disabled-description": "If true, the component is disabled.",
  "chipDocumentation:example1-name": "Assist Chip",
  "chipDocumentation:example1-description": "Assist chip only has a leading icon and can be used only as an informative chip",
  "chipDocumentation:example2-name": "Filter Chip",
  "chipDocumentation:example2-description": "Filter chip has a leading icon and can be used as a selectable chip",
  "chipDocumentation:example3-name": "Filter Chip - Selected",
  "chipDocumentation:example3-description": "Filter chip has a leading icon and can be used as a selectable chip",
  "chipDocumentation:example4-name": "Input Chip",
  "chipDocumentation:example4-description": "Input chip has both leading and trailing icon and can be used as a selectable chip",
  "chipDocumentation:example5-name": "Input Chip - Selected",
  "chipDocumentation:example5-description": "Input chip has both leading and trailing icon and can be used as a selectable chip",
  "chipDocumentation:example6-name": "Suggestion Chip",
  "chipDocumentation:example6-description": "Suggestion chip has no icon and can be used as a selectable chip",
  "chipDocumentation:example7-name": "Suggestion Chip - Selected",
  "chipDocumentation:example7-description": "Suggestion chip has no icon and can be used as a selectable chip",

  "containerDocumentation:mainHeading": "Container",
  "containerDocumentation:mainDescription": "Container helps you arrange your components clearly on the screen",
  "containerDocumentation:example1-name": "Default",
  "containerDocumentation:property-flexDirection-description": "The direction in which the children components are positioned",
  "containerDocumentation:property-align-description": "The alignment of all items on the cross axis",
  "containerDocumentation:property-justify-description": "The alignment of all items on the main axis.",
  "containerDocumentation:property-style-description": "The styles for the container component.",
  "containerDocumentation:property-disableGutters-description": "If true, the left and right padding is removed.",
  "containerDocumentation:property-fixed-description": "If true, sets the max-width to match the min-width of the current breakpoint.",
  "containerDocumentation:property-width-description": "The width of the container in pixels or percentage.",
  "containerDocumentation:property-maxWidth-description": "The maximum width of the container in breakpoints, pixels or percentage.",
  "containerDocumentation:property-sx-description": "The system prop that allows defining system overrides as well as additional CSS styles.",

  "datePickerInputDocumentation:mainHeading": "Date Picker Input",
  "datePickerInputDocumentation:mainDescription": "A Date Picker Input allows users to select a specific date from a calendar. The date picker typically includes a visual calendar display with controls for navigating between months and years, as well as input fields for manually entering or selecting a specific date.",
  "datePickerInputDocumentation:example1-name": "Default",
  "datePickerInputDocumentation:example2-name": "Date picker input - without modal",
  "datePickerInputDocumentation:external-properties-title": "Text Field Properties",
  "datePickerInputDocumentation:property-onChange-description": "The call back function to be called in case of date change.",
  "datePickerInputDocumentation:property-value-description": "The value of date",
  "datePickerInputDocumentation:property-locale-description": "The locale in which the date is to be formatted",
  "datePickerInputDocumentation:property-validRange-description": "The valid date range to be allowed by the date picker",
  "datePickerInputDocumentation:property-withDateFormatInLabel-description": "If true, the date format is displayed along with label.",
  "datePickerInputDocumentation:property-hideValidationErrors-description": "If true, no validation error messages are displayed ",
  "datePickerInputDocumentation:property-hasError-description": "Whether the date input has errors",
  "datePickerInputDocumentation:property-onValidationError-description": "Callback function to be called when there are any error during validation",
  "datePickerInputDocumentation:property-calendarIcon-description": "Icon name from material icons provided by react native vector icons, for the calendar",
  "datePickerInputDocumentation:property-okLabel-description": "Label for the Ok button of the date picker modal",
  "datePickerInputDocumentation:property-okLabelDisabled-description": "Whether the ok button is disabled",
  "datePickerInputDocumentation:property-cancelLabel-description": "Label for the cancel button of the date picker modal",
  "datePickerInputDocumentation:property-cancelLabelDisabled-description": "Whether the cancel button is disabled",
  "datePickerInputDocumentation:property-startYear-description": "Start Year for the date picker modal",
  "datePickerInputDocumentation:property-endYear-description": "End Year for the date picker modal",
  "datePickerInputDocumentation:property-inputEnabled-description": "Whether the input field is enabled",
  "datePickerInputDocumentation:property-mask-description": "The input mask for the date picker input",

  "datePickerModalDocumentation:mainHeading": "Date Picker Modal",
  "datePickerModalDocumentation:mainDescription": "A Date Picker Modal allows users to select a specific date from a calendar. The date picker typically includes a visual calendar display with controls for navigating between months and years, as well as input fields for manually entering or selecting a specific date.",
  "datePickerModalDocumentation:example1-name": "Date Picker Modal - single",
  "datePickerModalDocumentation:example2-name": "Date Picker Modal - multiple",
  "datePickerModalDocumentation:example3-name": "Date Picker Modal - range",
  "datePickerModalDocumentation:property-visible-description": "Whether the date pick modal, is visible or hidden.",
  "datePickerModalDocumentation:property-mode-description": "The mode of date selection.",
  "datePickerModalDocumentation:property-date-description": "The value of date for the single date picker modal.",
  "datePickerModalDocumentation:property-dates-description": "The value of dates in array format for the multiple date picker modal.",
  "datePickerModalDocumentation:property-startDate-description": "The value of start date for the range date picker modal.",
  "datePickerModalDocumentation:property-endDate-description": "The value of end date for the range date picker modal.",
  "datePickerModalDocumentation:property-onConfirm-description": "The callback function to be called, after confirmation of date selection.",
  "datePickerModalDocumentation:property-onDismiss-description": "The callback function to be called, after dismissal of date selection.",
  "datePickerModalDocumentation:property-dateMode-description": "Whether the date is start type or end type, to determine the time in date format, if start, the date has time stamp of UTC 00:00 , else if end, UTC 23:59 of the selected date (for single date picker modal).",
  "datePickerModalDocumentation:property-onChange-description": "The callback function to be called, when there is change in date selection.",
  "datePickerModalDocumentation:property-inputFormat-description": "The input format of the date.",
  "datePickerModalDocumentation:property-allowEditing-description": "If true, the dates selected can be edited using text input field in date picker modal.",
  "datePickerModalDocumentation:property-collapsed-description": "If true, displays text input field in date picker modal., else displays calendar",
  "datePickerModalDocumentation:property-onToggle-description": "Callback function to be called, when the user toggles between calendar and input fields in modal",
  "datePickerModalDocumentation:property-disableSafeTop-description": "If true, disables the padding at top. ",
  "datePickerModalDocumentation:property-locale-description": "The locale in which the date is to be formatted",
  "datePickerModalDocumentation:property-validRange-description": "The valid date range to be allowed by the date picker",
  "datePickerModalDocumentation:property-withDateFormatInLabel-description": "If true, the date format is displayed along with label.",
  "datePickerModalDocumentation:property-animationType-description": "The animation type for date picker modal",
  "datePickerModalDocumentation:property-calendarIcon-description": "Icon name from material icons provided by react native vector icons, for the calendar",
  "datePickerModalDocumentation:property-closeIcon-description": "Icon name from material icons provided by react native vector icons, for the close button",
  "datePickerModalDocumentation:property-editIcon-description": "Icon name from material icons provided by react native vector icons, for the edit button",
  "datePickerModalDocumentation:property-headerSeparator-description": "The separator between the start and end dates in header of range date picker modal",
  "datePickerModalDocumentation:property-label-description": "Label for the date picker modal",
  "datePickerModalDocumentation:property-okLabel-description": "Label for the Ok button of the date picker modal",
  "datePickerModalDocumentation:property-saveLabel-description": "Label for the save button in header of the date picker modal",
  "datePickerModalDocumentation:property-startLabel-description": "Label for the placeholder of start date in  range date picker modal header",
  "datePickerModalDocumentation:property-endLabel-description": "Label for the placeholder of end date in  range date picker modal header",
  "datePickerModalDocumentation:property-moreLabel-description": "Label for the more dates indicator in multiple date picker modal header",
  "datePickerModalDocumentation:property-emptyLabel-description": "placeholder for the header in date picker modal header, when selected date(s) is/are empty",
  "datePickerModalDocumentation:property-okLabelDisabled-description": "Whether the ok button is disabled",
  "datePickerModalDocumentation:property-cancelLabel-description": "Label for the cancel button of the date picker modal",
  "datePickerModalDocumentation:property-cancelLabelDisabled-description": "Whether the cancel button is disabled",
  "datePickerModalDocumentation:property-saveLabelDisabled-description": "Whether the save button is disabled",
  "datePickerModalDocumentation:property-startYear-description": "Start Year for the date picker modal",
  "datePickerModalDocumentation:property-endYear-description": "End Year for the date picker modal",
  "datePickerModalDocumentation:property-inputEnabled-description": "Whether the input field is enabled",
  "datePickerModalDocumentation:property-disableStatusBar-description": "Whether to disable the status bar in native apps, when the modal is active.",
  "datePickerModalDocumentation:property-disableStatusBarPadding-description": "Whether to disable the padding at top for status bar in native apps.",
  "datePickerModalDocumentation:property-mask-description": "The input mask for the date picker input",

  "dialogDocumentation:mainHeading": "Dialog",
  "dialogDocumentation:mainDescription": "A Dialog is used to display information or prompt the user for input. It is displayed on top of the current screen and temporarily halts the user’s interaction with the rest of the application until the dialog is dismissed.\n\nThe content of the dialog can also include other components such as forms, text inputs, checkboxes, and radio buttons.",
  "dialogDocumentation:example1-name": "Default",
  "dialogDocumentation:example1-description": "A dialog typically includes a title, a message or prompt, and action buttons for the user to respond.",
  "dialogDocumentation:example2-name": "Dialog - with hero icon",
  "dialogDocumentation:example2-description": "A dialog typically includes a hero icon, a title, a message or prompt, and action buttons for the user to respond.",
  "dialogDocumentation:example3-name": "List dialog",
  "dialogDocumentation:example3-description": "A list dialog is a dialog that presents a list of options for the user to select from, along with other content that may be included in a typical dialog.",
  "dialogDocumentation:example4-name": "Scrolling list dialog",
  "dialogDocumentation:example4-description": "It is similar to a list dialog but includes a scrollable list of items that the user can select.",
  "dialogDocumentation:example5-name": "Full screen dialog",
  "dialogDocumentation:example5-description": "A full-screen dialog covers the entire screen of a device. This type of dialog is typically used to display detailed information or prompt the user for input that requires a large amount of space, such as a form with multiple fields, a list of options to select.",

  "dialogDocumentation:external-properties-title": "Container Properties",
  "dialogDocumentation:property-visible-description": "Whether the dialog is visible.",
  "dialogDocumentation:property-onDismiss-description": "Callback function to be called when the dialog is dismissed or closed",
  "dialogDocumentation:property-type-description": "The type of the dialog.",

  "dialogDocumentation:additionalInformation-title": "See also",
  "dialogDocumentation:additionalInformation-info1": "<a  class=\"documentation-link\" target=\"blank\" href=\"/components/dialog/title\" title=\"Dialog Title\">Dialog Title</a>.",
  "dialogDocumentation:additionalInformation-info2": "<a  class=\"documentation-link\" target=\"blank\" href=\"/components/dialog/content\" title=\"Dialog Content\">Dialog Content</a>.",
  "dialogDocumentation:additionalInformation-info3": "<a  class=\"documentation-link\" target=\"blank\" href=\"/components/dialog/actions\" title=\"Dialog Actions\">Dialog Actions</a>.",

  "dialogTitleDocumentation:mainHeading": "Dialog Title",
  "dialogTitleDocumentation:property-title-description": "The text for title. ",
  "dialogTitleDocumentation:property-type-description": "The type of dialog title. ",
  "dialogTitleDocumentation:property-icon-description": "The hero icon for the dialog title.",
  "dialogTitleDocumentation:property-children-description": "The child elements for the custom title type.",
  "dialogTitleDocumentation:property-action-description": "The action element for the title of full screen dialog.",
  "dialogTitleDocumentation:property-onDismiss-description": "Callback function to be called when the dialog is dismissed or closed.",
  "dialogTitleDocumentation:example1-name": "Default",
  "dialogTitleDocumentation:example2-name": "Custom",
  "dialogTitleDocumentation:example3-name": "Full screen",

  "dialogContentDocumentation:mainHeading": "Dialog Content",
  "dialogContentDocumentation:property-children-description": "The child components that is displayed to as content of the dialog.",
  "dialogContentDocumentation:property-style-description": "The style for content area of the dialog.",
  "dialogContentDocumentation:example1-name": "Default",

  "dialogActionsDocumentation:mainHeading": "Dialog Actions",
  "dialogActionsDocumentation:property-children-description": "The child components that is displayed to as actions of the dialog.",
  "dialogActionsDocumentation:property-align-description": "The alignment of all action items on the cross axis",
  "dialogActionsDocumentation:property-justify-description": "The alignment of all action items on the main axis.",
  "dialogActionsDocumentation:property-style-description": "The style for action area of the dialog.",
  "dialogActionsDocumentation:example1-name": "Default",

  "dividerDocumentation:mainHeading": "Divider",
  "dividerDocumentation:mainDescription": "A divider is a visual element that separates content or components within a layout. Dividers can be horizontal or vertical lines or other shapes or patterns that help break the interface into distinct areas or sections.",
  "dividerDocumentation:example1-name": "Orientation",
  "dividerDocumentation:example1-description": "Horizontal dividers are typically used to separate lists or sections of content, while vertical dividers are often used to create columns or separate adjacent elements.",
  "dividerDocumentation:example2-name": "Variants",
  "dividerDocumentation:example2-description": "Divider comes with variants like full-width, left-inset, right-inset, middle, full-height, top-inset and bottom-inset.",
  "dividerDocumentation:example3-name": "Patterns",
  "dividerDocumentation:example3-description": "Divider comes with patterns like line, double-line, dotted and dashed.",
  "dividerDocumentation:example4-name": "Divider - with text and children",
  "dividerDocumentation:example4-description": "These are used to visually separate content into different sections or categories, and provide additional context or information about the content.",

  "dividerDocumentation:property-variant-description": "Variant of divider that decides inset and width for horizontal, height for vertical dividers",

  "dividerDocumentation:property-pattern-description": "The pattern of the dividing line.",
  "dividerDocumentation:property-style-description": "The styles for the divider component.",
  "dividerDocumentation:property-orientation-description": "Whether the divider is vertical or horizontal.",
  "dividerDocumentation:property-thickness-description": "The thickness or weight of the divider line.",
  "dividerDocumentation:property-light-description": "If true, the divider is displayed in a lighter shade of the color given in style.",
  "dividerDocumentation:property-text-description": "The text that is to be displayed on the divider.",
  "dividerDocumentation:property-textStyle-description": "The styles for the text on the divider.",
  "dividerDocumentation:property-align-description": "The alignment of text/children on the divider.",
  "dividerDocumentation:property-children-description": "The component that is to be displayed on the divider.",

  "fileUploadDocumentation:mainHeading": "File upload ",
  "fileUploadDocumentation:mainDescription": "File upload allows users to select and upload files from their device to a remote server, typically through a button or link labeled “Upload” or “Choose file”.",
  "fileUploadDocumentation:example1-name": "Simple file upload",
  "fileUploadDocumentation:example1-description": "Simple file upload is commonly used in applications that require users to submit documents or images as part of a form or application process.",
  "fileUploadDocumentation:example2-name": "Single file upload",
  "fileUploadDocumentation:example2-description": "Single file uploads are commonly used in applications where users need to upload a single file.",
  "fileUploadDocumentation:example3-name": "File upload list",
  "fileUploadDocumentation:example3-description": "A file upload list is used to display a list of multiple uploaded files.",
  "fileUploadDocumentation:example4-name": "Drag & drop zone",
  "fileUploadDocumentation:example4-description": "Drag and drop upload is a method of file uploading that allows users to select and upload files by simply dragging and dropping them from their local file system onto a designated area on a web page or application interface.",
  "fileUploadDocumentation:example5-name": "Image preview",
  "fileUploadDocumentation:example5-description": "Image preview is used to display a visual representation of an uploaded image.",
  "fileUploadDocumentation:example6-name": "File upload list - sortable",
  "fileUploadDocumentation:property-variant-description": "The variant of file upload (wether image or files).",
  "fileUploadDocumentation:property-previewType-description": "The type of preview of image in the upload list",
  "fileUploadDocumentation:property-fileType-description": "The mimetype of the files to be allowed for upload",
  "fileUploadDocumentation:property-onChange-description": "Callback function that will be called when there is any change in uploaded file list",
  "fileUploadDocumentation:property-multiple-description": "Whether to allow multiple  files upload",
  "fileUploadDocumentation:property-sortable-description": "Whether to allow sorting after uploading files",
  "fileUploadDocumentation:property-optimization-description": " Whether to optimize image during upload",
  "fileUploadDocumentation:property-copyToCacheDirectory-description": "Whether to copy file to cache directory after uploading",
  "fileUploadDocumentation:property-errors-description": "The error state and message for each file",
  "fileUploadDocumentation:property-errorMessageForDuplicateFiles-description": "The message to display when duplicate file name is found in upload list",
  "fileUploadDocumentation:property-listWidth-description": "The width of files upload list",
  "fileUploadDocumentation:property-style-description": "The styles for the file upload component",
  "fileUploadDocumentation:property-listStyle-description": "The Styles for the upload list",
  "fileUploadDocumentation:external-properties-title": "Button Properties",

  "fileDropZoneDocumentation:mainHeading": "File drop zone ",
  "fileDropZoneDocumentation:mainDescription": "Drag and drop upload is a method of file uploading that allows users to select and upload files by simply dragging and dropping them from their local file system onto a designated area on a web page or application interface.",
  "fileDropZoneDocumentation:example1-name": "Default",

  "fileDropZoneDocumentation:property-variant-description": "The variant of file upload (wether image or files).",
  "fileDropZoneDocumentation:property-children-description": "The content of dropzone.",
  "fileDropZoneDocumentation:property-dragActivePlaceholder-description": "The content of dropzone when its is active.",
  "fileDropZoneDocumentation:property-previewType-description": "The type of preview of image in the upload list",
  "fileDropZoneDocumentation:property-fileType-description": "The mimetype of the files to be allowed for upload",
  "fileDropZoneDocumentation:property-onChange-description": "Callback function that will be called when there is any change in uploaded file list",
  "fileDropZoneDocumentation:property-onSubmit-description": " Callback function that will be called when the uploaded files are submitted",
  "fileDropZoneDocumentation:property-multiple-description": "Whether to allow multiple  files upload",
  "fileDropZoneDocumentation:property-sortable-description": "Whether to allow sorting after uploading files",
  "fileDropZoneDocumentation:property-disabled-description": "Whether the dropzone is disabled",
  "fileDropZoneDocumentation:property-optimization-description": " Whether to optimize image during upload",
  "fileDropZoneDocumentation:property-copyToCacheDirectory-description": "Whether to copy file to cache directory after uploading",
  "fileDropZoneDocumentation:property-errors-description": "The error state and message for each file",
  "fileDropZoneDocumentation:property-errorMessageForDuplicateFiles-description": "The message to display when duplicate file name is found in upload list",
  "fileDropZoneDocumentation:property-listWidth-description": "The width of files upload list",
  "fileDropZoneDocumentation:property-dropZoneStyle-description": "The styles for the drop zone/area",
  "fileDropZoneDocumentation:property-style-description": "The styles for the file upload component",
  "fileDropZoneDocumentation:property-listStyle-description": "The Styles for the upload list",
  "fileDropZoneDocumentation:external-properties-title": "Container Properties",

  "imageDocumentation:mainHeading": "Image",
  "imageDocumentation:mainDescription": "An image is a visual representation of an object, idea, or concept that can be used to convey information, evoke emotions, grab attention, or add visual interest to an interface.\n\nIt is important to ensure that they are appropriate, relevant, and high-quality.",
  "imageDocumentation:example1-name": "Default",
  "imageDocumentation:example1-description": "A default image is a generic or temporary image that is used as a substitute for the final image until the actual image is selected or created.",
  "imageDocumentation:example2-name": "External image",
  "imageDocumentation:example2-description": "An external image is an image that is hosted on a server or website outside of the application interface where it is being used.",
  "imageDocumentation:example3-name": "Static Image - Implementation for Web",
  "imageDocumentation:example4-name": "Static Image - Implementation for Mobile",
  "imageDocumentation:property-source-description": "The image source (either a remote URL or a local file resource). ",
  "imageDocumentation:property-alt-description": "A string that defines an alternative text description of the image, which will be read by the screen reader when the user interacts with it.",
  "imageDocumentation:external-properties-title": "React Native Image Properties",

  "textFieldDocumentation:mainHeading": "Text Field",
  "textFieldDocumentation:mainDescription": "Text fields allow users to enter text into a UI. They typically appear in forms and dialogs. There are two types of text fields: filled and outlined.",
  "textFieldDocumentation:property-variant-description": "The type of the text field",
  "textFieldDocumentation:property-label-description": "The label for the text field",
  "textFieldDocumentation:property-leadingIcon-description": "Icon to be displayed to left of the text field",
  "textFieldDocumentation:property-trailingIcon-description": "Icon to be displayed to right of the text field",
  "textFieldDocumentation:property-disabled-description": "If true, the component is disabled.",
  "textFieldDocumentation:property-error-description": "If there is any error after validation of input.",
  "textFieldDocumentation:property-supportingText-description": "Support text need to be displayed with the text field.",
  "textFieldDocumentation:property-errorMessage-description": "Error messages need to be displayed with the text field.",
  "textFieldDocumentation:property-supportingTextStyle-description": "Styles for the supporting text of text field.",
  "textFieldDocumentation:property-errorMessageStyle-description": "Styles for the error messages of text field.",
  "textFieldDocumentation:property-containerStyle-description": "Styles for container of the text field component.",
  "textFieldDocumentation:property-textInputStyle-description": "Styles for the text input of the text field component.",
  "textFieldDocumentation:property-style-description": "The styles for the text field component.",
  "textFieldDocumentation:property-pressableProps-description": "The properties of the pressable component of react native (except sx)",
  "textFieldDocumentation:property-sx-description": "The system prop that allows defining system overrides as well as additional CSS styles.",
  "textFieldDocumentation:example1-name": "Filled Text Field",
  "textFieldDocumentation:example2-name": "Filled Text Field - with Icons",
  "textFieldDocumentation:example3-name": "Outlined Text Field",
  "textFieldDocumentation:example4-name": "Outlined Text Field - with Icons",
  "textFieldDocumentation:example5-name": "Error text field",

  "menuDocumentation:mainHeading": "Menu",
  "menuDocumentation:mainDescription": "Menus provide a standardized way of displaying a list of options for the user to choose from, to provide a hierarchical structure of content and functionality.\n\nMenus can be implemented in various ways, with a button, and with an icon button.",
  "menuDocumentation:example1-name": "Default",
  "menuDocumentation:example1-description": "A default menu contains list items, icons, a divider, and other supporting icons.",
  "menuDocumentation:example2-name": "Nested Menu",
  "menuDocumentation:example3-name": "Menu - with an icon button",
  "menuDocumentation:example3-description": "A menu with an icon button displays a list of options when an icon button is clicked.",
  "menuDocumentation:property-isOpen-description": "Whether the menu is open.",
  "menuDocumentation:property-onMenuToggle-description": "Callback to be called when the menu is to toggled between open and close.",
  "menuDocumentation:property-component-description": "The component that controls menu.",

  "menuDocumentation:property-children-description": "Menu list Component comprising of Menu Items.",

  "menuDocumentation:additionalInformation-title": "See also",
  "menuDocumentation:additionalInformation-info1": "<a  class=\"documentation-link\" target=\"blank\" href=\"/components/menu/list\" title=\"Card Actions\">Menu List</a>.",
  "menuDocumentation:additionalInformation-info2": "<a  class=\"documentation-link\" target=\"blank\" href=\"/components/menu/item\" title=\"Card Actions\">Menu Item</a>.",

  "menuListDocumentation:mainHeading": "Menu List",

  "menuListDocumentation:example1-name": "Default",
  "menuListDocumentation:example1-description": "A default menu list contains items, icons, a divider, and other supporting icons.",

  "menuListDocumentation:property-inner-description": "Whether the menu is nested inside another menu.",
  "menuListDocumentation:property-pos-description": "The co-ordinates of the position of the menu.",

  "menuListDocumentation:external-properties-title": " Container Properties",

  "menuItemDocumentation:mainHeading": "Menu Item",

  "menuItemDocumentation:example1-name": "Default",
  "menuItemDocumentation:example1-description": "A menu item contains trailing icon, leading icon, trailing text.",

  "menuItemDocumentation:property-children-description": "The content of the menu item.",
  "menuItemDocumentation:property-inset-description": "If true, additional padding (inset) is added on the left.",
  "menuItemDocumentation:property-leadingIcon-description": "The icon displayed on the left side of the menu item.",
  "menuItemDocumentation:property-pos-description": "The icon displayed on the right side of the menu item.",
  "menuItemDocumentation:property-trailingIcon-description": "The co-ordinates of the position of the menu.",
  "menuItemDocumentation:property-trailingText-description": "The icon displayed on the right side of the menu item.",

  "menuItemDocumentation:external-properties-title": " Pressable Properties",

  "otpInputDocumentation:mainHeading": "OTP Input Field",

  "otpInputDocumentation:property-variant-description": "The variant of text field for the otp input.",
  "otpInputDocumentation:property-numberOfDigits-description": "Number of Digits in the OTP",
  "otpInputDocumentation:property-value-description": "The OTP Value as a string.",
  "otpInputDocumentation:property-type-description": "The type of the OTP.",
  "otpInputDocumentation:property-disabled-description": "If true, the component is disabled.",
  "otpInputDocumentation:property-error-description": "If there is any error after validation of input.",
  "otpInputDocumentation:property-hideValue-description": "Whether to hide the otp value like password",
  "otpInputDocumentation:property-onValueChange-description": "The callback to be called when the OTP is changed.",
  "otpInputDocumentation:property-errorMessage-description": "Error messages need to be displayed with the otp input.",
  "otpInputDocumentation:property-onSubmit-description": "The callback to be called when the OTP is submitted.",
  "otpInputDocumentation:property-errorMessageStyle-description": "Styles for the error messages of text field.",
  "otpInputDocumentation:property-containerStyle-description": "Styles for container of the text field component.",
  "otpInputDocumentation:property-textInputStyle-description": "Styles for the text input of the otp input component.",
  "otpInputDocumentation:property-style-description": "The styles for the otp input component.",

  "otpInputDocumentation:example1-name": "Filled OTP Input",

  "otpInputDocumentation:example2-name": "Outlined OTP Input",

  "otpInputDocumentation:example3-name": "OTP Input - with Error",

  "passwordInputDocumentation:mainHeading": "Password Input",
  "passwordInputDocumentation:mainDescription": "Password input is used for inputting passwords or other sensitive information that should not be visible to others. It typically consists of a text input field that obscures the entered text/password with dots, asterisks, or other symbols.",
  "passwordInputDocumentation:example1-name": "Filled Password Input",
  "passwordInputDocumentation:example2-name": "Outlined Password Input",
  "passwordInputDocumentation:example3-name": "Password Input - with Error",
  "passwordInputDocumentation:external-properties-title": " Text Field Properties",

  "passwordInputDocumentation:property-variant-description": "The variant of text field for the password input.",
  "passwordInputDocumentation:property-value-description": "The password Value as a string.",

  "phoneInputDocumentation:mainHeading": "Phone Input",
  "phoneInputDocumentation:mainDescription": "A phone input allows users to enter a phone number. It is used in applications for user registration, contact information, and other purposes where a phone number is required.\n\nA phone input typically includes formatting and validation features to ensure that the user enters a valid phone number.",
  "phoneInputDocumentation:example1-name": "Filled Phone Input",

  "phoneInputDocumentation:example2-name": "Outlined Phone Input",

  "phoneInputDocumentation:example3-name": "Error Phone Input",

  "phoneInputDocumentation:property-value-description": "The Value of the phone number.",

  "phoneInputDocumentation:property-onChangeText-description": "Callback Function when the value is changed or new data related to phone number is available.",

  "phoneInputDocumentation:property-defaultCountryCode-description": "The default country code value of phone input.",

  "phoneInputDocumentation:external-properties-title": "Auto Complete Properties",

  "radioDocumentation:mainHeading": "Radio",
  "radioDocumentation:mainDescription": "Radio buttons allow users to select one option from a set.",
  "radioDocumentation:property-id-description": "Id of the radio button item.",
  "radioDocumentation:property-selected-description": "Id of the selected radio button.",
  "radioDocumentation:property-label-description": "The label to display with the radio button.",
  "radioDocumentation:property-labelPlacement-description": "Position where the label should be placed.",
  "radioDocumentation:property-disabled-description": "If true, the component is disabled.",
  "radioDocumentation:property-color-description": "The color of the radio button component.",
  "radioDocumentation:property-style-description": "The styles for the radio button component.",
  "radioDocumentation:property-labelStyle-description": "The styles for the label of the radio button.",
  "radioDocumentation:property-containerStyle-description": "The styles for the container of the radio button.",
  "radioDocumentation:property-onPress-description": "The callback when there is a press or click on the radio button.",
  "radioDocumentation:example1-name": "Default",
  "radioDocumentation:example2-name": "Radio Button - with Label",
  "radioDocumentation:example3-name": "Radio Button - Group",

  "searchDocumentation:mainHeading": "Search",
  "searchDocumentation:mainDescription": "A Search input allows users to search for specific content within an application.\n\nSearch often include features such as auto-suggestion and filtering to help users find the content they are looking for quickly and easily.",
  "searchDocumentation:example1-name": "Search bar",
  "searchDocumentation:example1-description": "A Search bar is accompanied by icons and an avatar that triggers the search functionality.",
  "searchDocumentation:example2-name": "Search - Full Screen",
  "searchDocumentation:example2-description": "A Full-screen search view refers to a search functionality that is presented on a full-screen. This is mostly used or implemented on mobile screens.\n\nIt shows a list of related suggestions, according to the hint provided when the user searches for something in an application.",
  "searchDocumentation:example3-name": "Search - Docked",
  "searchDocumentation:example3-description": "A Docked search view refers to a search functionality that is presented as a part of a full screen, opposite to Full-screen search view. This is mostly used or implemented on large screens.\n\nIt shows a list of related suggestions, according to the hint provided when the user types for something in an application.",
  "searchDocumentation:example4-name": "Search view- no results found",
  "searchDocumentation:example4-description": "Here, the “No results found” message is typically displayed in a search results view when the search query does not return any results\n\nThis message helps to communicate to the user that their search did not produce any relevant results and encourages them to modify their search terms or try a different search strategy.",
  "searchDocumentation:property-filterOnChange-description": "The function to filter the results based on search key.",
  "searchDocumentation:property-type-description": "The type of view for search results",
  "searchDocumentation:property-searchBarStyle-description": "The Styles for the search bar input field.",
  "searchDocumentation:property-searchBarContainerStyle-description": "The Styles for the search bar container.",
  "searchDocumentation:property-containerStyle-description": "The Styles for the search bar component and results container.",
  "searchDocumentation:external-properties-title": "Auto Complete Properties",

  "sideSheetDocumentation:mainHeading": "Side Sheet",
  "sideSheetDocumentation:mainDescription": "A Side sheet is a type of modal dialog that slides in from the side of the screen to display additional information or functionality related to the current view or task.\n\nSide Sheets can be used to display information that doesn’t fit within the main view, or to provide additional controls or actions related to the current task.",
  "sideSheetDocumentation:example1-name": "Standard Side Sheet",
  "sideSheetDocumentation:example1-description": "Standard side sheets appear on the right side of the primary screen and display content that complements the screen’s primary content.\n\nA Standard Side Sheet can be customized with various styles and options, and with other components.",
  "sideSheetDocumentation:property-width-description": "The width of the side sheet.",
  "sideSheetDocumentation:property-startCoordinate-description": "Initial coordinate for the sheet to stay at.\n-100 will show 100px of it when closed (when align='right')\n - 100 will show 100px of it when closed (when align='left')",
  "sideSheetDocumentation:property-damping-description": "Damping for animations.",
  "sideSheetDocumentation:property-children-description": "The components that are to be displayed inside bottom sheet.",
  "sideSheetDocumentation:property-align-description": "The alignment of the sheet.",
  "sideSheetDocumentation:property-divider-description": "If true, a divider is displayed at the end of the sheet.",
  "sideSheetDocumentation:property-headline-description": "The title that will be shown in the header.",
  "sideSheetDocumentation:property-onBackButtonPress-description": "Callback function when the back button is pressed, If this is provided, back button will be visible, else hidden in the header.",
  "sideSheetDocumentation:property-onCloseButtonPress-description": "Callback function when the close button is pressed.",
  "sideSheetDocumentation:property-handleStyles-description": "Styles for the handle.",
  "sideSheetDocumentation:property-containerStyles-description": "Styles for the bottom sheet.",

  "switchDocumentation:mainHeading": "Switch",
  "switchDocumentation:mainDescription": "A switch allows users to toggle between two states, typically on and off, by clicking or tapping on it. It is commonly used to turn settings or features on or off in various types of user interfaces.",
  "switchDocumentation:property-value-description": "The value/state of the switch.",
  "switchDocumentation:property-size-description": "Size of the component (Use this to adjust the size of the component, else might misbehave during switching).",
  "switchDocumentation:property-iconOn-description": "The icon to display with the switch when it is on.",
  "switchDocumentation:property-iconOff-description": "The icon to display with the switch when it is off.",
  "switchDocumentation:property-onChange-description": "The callback function to be executed when the state of switch is changed.",
  "switchDocumentation:property-thumbStyle-description": "Styles for the thumb of the Switch.",
  "switchDocumentation:property-trackStyle-description": "Styles for the track of the Switch.",

  "switchDocumentation:example1-name": "Default",
  "switchDocumentation:example2-name": "Switch - with icon",

  "tabsDocumentation:mainHeading": "Tabs",
  "tabsDocumentation:mainDescription": "Tabs are used to organize related content into separate sections or views, allowing users to switch between them quickly and easily. When a user selects a tab, the content of that section is displayed while the other sections remain hidden.\n\nTabs typically appear as a row of clickable labels or icons at the top or bottom of a screen, with each tab corresponding to a different view or function.",
  "tabsDocumentation:property-children-description": "The Individual Tab Components.",
  "tabsDocumentation:property-active-description": "The index of active tab.",
  "tabsDocumentation:property-onChange-description": "Callback function to be called when tab is changed.",
  "tabsDocumentation:property-type-description": "The type of tabs.",
  "tabsDocumentation:property-tab-children-description": "The components to be displayed in the tab.",
  "tabsDocumentation:property-name-description": "The name of the tab.",
  "tabsDocumentation:property-icon-description": "The icon of the tab.",
  "tabsDocumentation:property-contentStyle-description": "The styles for the tab content container.",
  "tabsDocumentation:property-tabHeaderStyle-description": "The styles for the tab header.",
  "tabsDocumentation:property-activeTabHeaderStyle-description": "The styles for the tab header of active tab.",

  "tabsDocumentation:external-properties-title": "Container Properties",

  "tabsDocumentation:example1-name": "Primary tabs",
  "tabsDocumentation:example1-description": "Primary tabs should be used if there is only one set of tabs on a screen, and there is no need for additional sets of tabs to be displayed.\n\nThese are typically used for top-level navigation within an app or website and allow the user to switch between different sections or views of the content.",
  "tabsDocumentation:example2-name": "Secondary tabs",
  "tabsDocumentation:example2-description": "Secondary tabs are a set of tabs that appear below primary tabs, and they are used to further organize content within a primary tab.\n\nThey are typically used to group related information or to display multiple views of the same data. Unlike primary tabs, secondary tabs can be used in combination with primary tabs.",
  "tabsDocumentation:example3-name": "Scrollable tabs",
  "tabsDocumentation:example3-description": "Scrollable tabs are displayed in a horizontal row, but if there are too many tabs to fit within the width of the screen, the user can swipe left or right to view additional tabs. This allows for a larger number of tabs to be displayed without taking up too much screen real estate.",
  "tabsDocumentation:example4-name": "Tabs - Medium/Large Screens",
  "tabsDocumentation:example4-description": "It can be used on medium and large screens with wide layouts such as tabular devices or even web applications. Where the tab container on these screens scales horizontally to occupy the available screen width.",

  "timePickerDocumentation:mainHeading": "Time picker",
  "timePickerDocumentation:mainDescription": "A Time picker is used to allow users to select a specific time of day, typically displayed in a dialog. It usually consists of an analog or digital clock interface, along with buttons for setting the hour and minute values.\n\nTime pickers can be used in a variety of contexts, such as scheduling appointments or setting reminders.",
  "timePickerDocumentation:example1-name": "Default",
  "timePickerDocumentation:example1-description": "Time picker is used to select a specific time, typically using a touch screen or a mouse. It consists of two selectors representing hours and minutes and can drag a pointer around the circle to select the desired time.",
  "timePickerDocumentation:example2-name": "Time picker - 24 hours format",
  "timePickerDocumentation:example3-name": "Time picker - vertical",
  "timePickerDocumentation:example3-description": "A Time picker dial with a vertical layout is the preferred format for mobile applications. ",
  "timePickerDocumentation:example4-name": "Time picker - horizontal",
  "timePickerDocumentation:example4-description": "A Time picker dial with a horizontal layout is the same as a vertical time picker dial but with a horizontal layout. It is the preferred format for web applications",

  "timePickerDocumentation:property-visible-description": "Whether the time picker modal, is visible or hidden.",
  "timePickerDocumentation:property-onConfirm-description": "The callback function to be called, after confirmation of date selection.",
  "timePickerDocumentation:property-onDismiss-description": "The callback function to be called, after dismissal of date selection.",
  "timePickerDocumentation:property-hours-description": "The value of hours in the selected time.",
  "timePickerDocumentation:property-minutes-description": "The value of minutes in the selected time.",
  "timePickerDocumentation:property-use24HourClock-description": "If true, time picker displays 24 hrs format.",
  "timePickerDocumentation:property-defaultInputType-description": "Default input option to display.",
  "timePickerDocumentation:property-horizontal-description": "Whether to display the picker in horizontal orientation.",
  "timePickerDocumentation:property-label-description": "Label for the time picker.",
  "timePickerDocumentation:property-cancelLabel-description": "Label for the cancel button of the time picker.",
  "timePickerDocumentation:property-confirmLabel-description": "Label for the confirm button of the time picker.",
  "timePickerDocumentation:property-keyboardIcon-description": "Icon name from material icons provided by react native vector icons, for the keyboard.",
  "timePickerDocumentation:property-clockIcon-description": "Icon name from material icons provided by react native vector icons, for the clock.",
  "timePickerDocumentation:property-animationType-description": "The animation for the time picker modal, when it appears or disappears.",
  "timePickerDocumentation:property-inputStyle-description": "Style for the input fields of the time picker.",

  "touchableRippleDocumentation:mainHeading": "Touchable Ripple",
  "touchableRippleDocumentation:mainDescription": "A Touchable ripple is a visual effect that is triggered when a user interacts with a touchable element, such as a button or icon, on a touch-screen device.\n\nWhen the user taps or clicks on the element, and a ripple effect appears around the point of contact, giving the user visual feedback that their input has been registered.",
  "touchableRippleDocumentation:example1-name": "Default",
  "touchableRippleDocumentation:example1-description": "The ripple effect is typically achieved through the use of animation and color and can be customized to match the color scheme and design aesthetic of the application.",

  "touchableRippleDocumentation:property-children-description": "Content that needs to be displayed",
  "touchableRippleDocumentation:property-centered-description": "If true, the ripple starts at the center (only for web)",
  "touchableRippleDocumentation:property-borderless-description": "If true, the ripple is rendered outside the view bounds.",
  "touchableRippleDocumentation:property-rippleColor-description": "Color of the ripple effect (Android and web)",
  "touchableRippleDocumentation:property-underlayColor-description": "Color of the underlay for the highlight effect (for ios)",
  "touchableRippleDocumentation:property-background-description": "Type of background drawable to display the feedback.",
  "touchableRippleDocumentation:external-properties-title": "Pressable Properties",

  "typographyDocumentation:mainHeading": "Typography",
  "typographyDocumentation:mainDescription": "Typography is used to arrange the typefaces to create a visually appealing and effective communication design.",
  "typographyDocumentation:example1-name": "Display",
  "typographyDocumentation:example1-description": "Displays are often used for large, attention-grabbing headlines or titles.",
  "typographyDocumentation:example2-name": "Headline",
  "typographyDocumentation:example2-description": "Headlines in graphic design are typically used for the main title or headline.",
  "typographyDocumentation:example3-name": "Title",
  "typographyDocumentation:example3-description": "A title is used to label or describe a section, page, or component.",
  "typographyDocumentation:example4-name": "Body",
  "typographyDocumentation:example4-description": "A body is used to display the main content or information.",
  "typographyDocumentation:example5-name": "Label",
  "typographyDocumentation:example5-description": "A label is used to describe or provide additional information about a form field or any other user interface component.",
  "typographyDocumentation:property-children-description": "Content that needs to be displayed",
  "typographyDocumentation:property-size-description": "The size of the typography component",
  "typographyDocumentation:property-component-description": "The type of HTML component that needs to be rendered",
  "typographyDocumentation:property-align-description": "How to align the text of a typography component",
  "typographyDocumentation:property-style-description": "The styles for the typography component",
  "typographyDocumentation:property-htmlFor-description": "Only for Label. This can be used as \"for\" property in label component for web",

  "getting-started:mainHeading": "Getting Started",
  "getting-started:mainDescription": "To utilize Aṇu with your React Native or React Native web application, the following steps can be followed.",
  "getting-started:step1:title": "Install Aṇu",
  "getting-started:step2:title": "Transpile module",
  "getting-started:step2:description": "Add “anu” to the transpile packages in <b>next.config.js</b> file",
  "getting-started:step3:title": "Provider",
  "getting-started:step3:description": "Import the provider into <b>App.tsx</b> file.",
  "getting-started:step4:title": "For Next.js",
  "getting-started:step4:description": "These steps are only necessary if you are using <a class=\"documentation-link\" href=\"https://docs.expo.dev/guides/using-nextjs\" target=\"_blank\">Expo + Next.js.</a> Otherwise, feel free to skip them.",
  "getting-started:step4.1:title": "1. Add “anu” to the transpile packages in <b>next.config.js</b> file.",
  "getting-started:step4.2:title": "2. Import the provider into <b>_app.tsx</b> file.",
  "getting-started:step4.3:title": "3. Create a file in <b>public/fonts</b> directory called <b>fonts.css</b> and add the following code.",
  "getting-started:step4.4:title": "4. Go to <b>node_modules/react-native-vector-icons/Fonts</b> and copy the <b>MaterialIcons.ttf</b> into your <b>next/public/font directory.</b>",
  "getting-started:step4.5:title": "5. Now import <b>font.css</b> into <b>_app.tsx</b> file, on the top of all imports.",
  "getting-started:step5:title": "Icons",
  "getting-started:step5:description": "In case you require icons, you can install <a class=\"documentation-link\" href=\"https://github.com/oblador/react-native-vector-icons\" target=\"_blank\">react-native-vector-icons</a>.",

  "getting-started-index:mainHeading": "Getting Started",
  "getting-started-index:title-1": "Pre-requisites",
  "getting-started-index:title-2": "Install Aṇu",
  "getting-started-index:title-3": "Icons",
  "getting-started-index:title-4": "Provider",
  "getting-started-index:title-5": "For Next.js",

  "credits:mainHeading": "Credits",
  "credits:mainDescription": "These packages have provided an essential foundation that enabled us to deliver high-quality results. Their work has saved us countless hours of development time and allowed us to deliver a superior product.",
  "credits:packages:heading": "Packages used",
  "credits:packages:item-1": "1. <a class=\"documentation-link\" target=\"blank\" href=\"https://github.com/nandorojo/dripsy\">nandorojo/dripsy<a/> - Responsive, unstyled UI primitives for React Native + Web",
  "credits:packages:item-2": "2. <a class=\"documentation-link\" target=\"blank\" href=\"https://github.com/gorhom/react-native-portal\">gorhom/react-native-portal</a> - A simplified portal implementation for React Native & Web.",
  "credits:packages:item-3": "3. Flag icons created by <a class=\"documentation-link\" target=\"blank\" href=\"https://www.flaticon.com/free-icons/india\" title=\"india icons\">Roundicons - Flaticon</a>",
  "credits-index:mainHeading": "Credits",
  "credits-index:title-1": "Packages used",

  "theming:mainHeading": "Theming",
  "theming:mainDescription": "By following the provided steps, you can customize the appearance of the components in the library to align with the branding and design needs of your application. This can include the color scheme, typography, and other design elements that will be used throughout the application.",
  "theming:step-1:title": "Creating a theme",
  "theming:step-1:description": "Creating a new theme can be done with ease using the following approach. It involves extending the default theme provided by Anu, which results in a new theme object. This method draws inspiration from Dripsy and further guidance can be found in their documentation.",
  "theming:step-2:title": "Usage",
  "theming:step-3:title": "Color Modes",
  "theming:step-3:description-1": "The color modes available in the library are sourced from <a  class=\"documentation-link\" target=\"blank\" href=\"https://m3.material.io/styles/color/overview\" title=\"Material Design v3 Colors\">Material Design v3</a>.",
  "theming:step-3:description-2": "Further information on this is provided in the following link: <a  class=\"documentation-link\" target=\"blank\" href=\"https://m3.material.io/styles/color/the-color-system/key-colors-tones\" title=\"The Color System - Material Design 3\">The Color System - Material Design 3</a>.",
  "theming:step-3:description-3": "To obtain the color mode for your theme, you can utilize the material custom theme builder available at the following link: <a  class=\"documentation-link\" target=\"blank\" href=\"https://m3.material.io/theme-builder#/custom\" title=\"Material Theme Builder\">Material Theme Builder</a>.",
  "theming:step-4:title": "Default Color Modes",
  "theming:step-4:sub-title-1": "Light theme",
  "theming:step-4:sub-title-2": "Dark theme",
  "theming:step-4:description": "The theme can be utilized to customize these colors, and any modifications made will be consistently applied to all components within the library.",
  "theming:step-5:title": "Custom Fonts (In the future)",
  "theming:step-5:description-1": "The default font family in use is as follows: -apple-system, BlinkMacSystemFont, “Segoe UI”, Roboto, Helvetica, Arial, sans-serif.",
  "theming:step-5:description-2": "By specifying a font family at the root level of the theme, it is possible to modify this setting globally throughout the library.",
  "theming:step-6:title": "Additional Links",
  "theming:step-6:description-1": "<a target=\"blank\"  class=\"documentation-link\" href=\"https://m3.material.io/theme-builder#/custom\" title=\"Material Theme Builder\">Material Theme Builder</a>",
  "theming:step-6:description-2": "<a target=\"blank\"  class=\"documentation-link\" href=\"https://m3.material.io/styles\" title=\"Styles - Material Design 3\">Styles - Material Design 3</a>",
  "theming:step-6:description-3": "<a target=\"blank\"  class=\"documentation-link\" href=\"https://www.dripsy.xyz/usage/theming/create\" title=\"Theming - Dripsy\">Theming - Dripsy</a>",

  "theming-index:mainHeading": "Theming",
  "theming-index:title-1": "Creating a theme",
  "theming-index:title-2": "Usage",
  "theming-index:title-3": "Color Modes",
  "theming-index:title-4": "Default Color Modes",
  "theming-index:title-5": "Light theme",
  "theming-index:title-6": "Dark theme",
  "theming-index:title-7": "Custom Fonts",
  "theming-index:title-8": "Additional links"
}
